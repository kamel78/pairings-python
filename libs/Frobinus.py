#---------------------------------------------------------------------------------------------------------------------------------------------------------------------------#
#   Frobinus computation for Fp4 field extension 
#---------------------------------------------------------------------------------------------------------------------------------------------------------------------------#
def frobFp4(x,fbc):
     return [x[0],-x[1],(x[2]+x[3])*fbc,(x[2]-x[3])*fbc]

#---------------------------------------------------------------------------------------------------------------------------------------------------------------------------#
#   Frobinus computation for Fp8 field extension 
#---------------------------------------------------------------------------------------------------------------------------------------------------------------------------#
def frobFp8(x,fbc):
     return [x[0],-x[1],(x[2]+x[3])*fbc[0],(x[2]-x[3])*fbc[0],-(x[6])*fbc[1],(x[7])*fbc[1], x[5]*fbc[2],x[4]*fbc[2]]        

#---------------------------------------------------------------------------------------------------------------------------------------------------------------------------#
#   Inverse Frobinus computation for Fp8 field extension , to be used for optimisation of cofactor cleaning on BLS48
#---------------------------------------------------------------------------------------------------------------------------------------------------------------------------#
def invfrobFp8(x,ifbc):
     return [x[0],-x[1],(x[2]+x[3])*ifbc[0],(x[2]-x[3])*ifbc[0],x[7]*ifbc[1],(x[6])*ifbc[1], (-x[4])*ifbc[2],(x[5])*ifbc[2]]       

#---------------------------------------------------------------------------------------------------------------------------------------------------------------------------#
#   Frobinus computation for Fp12 field extension 
#---------------------------------------------------------------------------------------------------------------------------------------------------------------------------#
def frobFp12(x,fbc):
        return [x[0],-x[1],x[3]*fbc[0],x[2]*fbc[0],x[4]*(fbc[0]+1),-(x[5])*(fbc[0]+1),(x[6]-x[7])*fbc[1],-(x[6]+x[7])*fbc[1],(x[8]+x[9])*fbc[2],(x[8]-x[9])*fbc[2],\
               (x[10]-x[11])*fbc[3],-(x[10]+x[11])*fbc[3]] 
        
def frob2Fp12(x,fbc):
        return [x[0],x[1],-x[2]*(fbc[0]+1),-x[3]*(fbc[0]+1),x[4]*fbc[0],x[5]*fbc[0],-x[6]*fbc[0],-x[7]*fbc[0],-x[8],-x[9],x[10]*(fbc[0]+1),x[11]*(fbc[0]+1)]
           
def frob3Fp12(x,fbc):
        return [x[0],-x[1],x[3],x[2],-x[4],x[5],(x[7]-x[6])*fbc[2],(x[6]+x[7])*fbc[2],-(x[8]+x[9])*fbc[2],(x[9]-x[8])*fbc[2],(x[10]-x[11])*fbc[2],-(x[10]+x[11])*fbc[2]] 

#---------------------------------------------------------------------------------------------------------------------------------------------------------------------------#
#   Frobinus computation for Fp24 field extension 
#---------------------------------------------------------------------------------------------------------------------------------------------------------------------------#
def frobFp24(x,fbc): 
      return [x[0],-x[1],(x[2]+x[3])*fbc[0],(x[2]-x[3])*fbc[0],-fbc[1]*x[6],fbc[1]*x[7],x[5]*fbc[2],x[4]*fbc[2],(x[11]+x[10])*fbc[3],(x[10]-x[11])*fbc[3], \
              (x[8]-x[9])*fbc[4],-(x[8]+x[9])*fbc[4],x[13]*fbc[5],x[12]*fbc[5],(x[15]-x[14])*fbc[6],(x[15]+x[14])*fbc[6],(x[16]-x[17])*fbc[7],-(x[16]+x[17])*fbc[7],\
              x[18]*(fbc[5]+1),-x[19]*(fbc[5]+1),(x[23]-x[22])*fbc[8],(x[22]+x[23])*fbc[8],(x[20]+x[21])*fbc[9],(x[20]-x[21])*fbc[9]]
    
def frob2Fp24(x,fbc): 
    return [x[0],x[1],-x[2],-x[3],-x[5],x[4],x[7],-x[6],-x[9]*(fbc[5]+1),x[8]*(fbc[5]+1),x[11]*(fbc[5]+1),-x[10]*(fbc[5]+1),-x[12]*(fbc[5]+1),-x[13]*(fbc[5]+1),\
            x[14]*(fbc[5]+1),x[15]*(fbc[5]+1),-x[16]*fbc[5], -x[17]*fbc[5],x[18]*fbc[5],x[19]*fbc[5],x[21]*fbc[5],-x[20]*fbc[5],-x[23]*fbc[5],x[22]*fbc[5]]  

def frob4Fp24(x,fbc):  
    return [x[0],x[1],x[2],x[3],-x[4],-x[5],-x[6],-x[7],-x[8]*fbc[5],-x[9]*fbc[5],-x[10]*fbc[5],-x[11]*fbc[5],x[12]*fbc[5],x[13]*fbc[5],x[14]*fbc[5],x[15]*fbc[5],\
            -x[16]*(fbc[5]+1), -x[17]*(fbc[5]+1),-x[18]*(fbc[5]+1),-x[19]*(fbc[5]+1),x[20]*(fbc[5]+1),x[21]*(fbc[5]+1),x[22]*(fbc[5]+1),x[23]*(fbc[5]+1)]  

#---------------------------------------------------------------------------------------------------------------------------------------------------------------------------#
#   Frobinus computation for Fp48 field extension 
#---------------------------------------------------------------------------------------------------------------------------------------------------------------------------#
def frobFp48(x,fbc):
        return [ x[0],-x[1],(x[2]+x[3])*fbc[0],(x[2]-x[3])*fbc[0],-x[6]*fbc[1],x[7]*fbc[1],x[5]*fbc[2],x[4]*fbc[2],
                    (x[10]+x[11])*fbc[3],(x[10]-x[11])*fbc[3],(x[9]-x[8])*fbc[4],(x[9]+x[8])*fbc[4],x[13]*fbc[5],x[12]*fbc[5],
                    (x[15]-x[14])*fbc[6],(x[15]+x[14])*fbc[6],(x[16]-x[17])*fbc[7],-(x[16]+x[17])*fbc[7],x[18]*(fbc[5]+1),-x[19]*(fbc[5]+1),
                    (x[23]-x[22])*fbc[8],(x[23]+x[22])*fbc[8],(x[21]+x[20])*fbc[9],(x[20]-x[21])*fbc[9],                    
                    -x[31]*fbc[10],-x[30]*fbc[10],-x[28]*fbc[11],x[29]*fbc[11],-(x[26]-x[27])*fbc[12],(x[27]+x[26])*fbc[12],
                    -(x[25]+x[24])*fbc[13],(x[25]-x[24])*fbc[13],-(x[36])*fbc[14],(x[37])*fbc[14],-(x[39]+x[38])*fbc[15],(x[39]-x[38])*fbc[15],
                    -(x[33]+x[32])*fbc[16],(x[33]-x[32])*fbc[16],x[35]*fbc[17],x[34]*fbc[17],-(x[47]+x[46])*fbc[18],(x[47]-x[46])*fbc[18],
                    -(x[44]-x[45])*fbc[19],(x[45]+x[44])*fbc[19],(x[43])*fbc[20],(x[42])*fbc[20],-x[40]*fbc[21],x[41]*fbc[21]]

def frob2Fp48(x,fbc):     
      return [x[0],x[1],-x[2],-x[3],-x[5],x[4],x[7],-x[6],-x[9]*(fbc[5]+1),x[8]*(fbc[5]+1),x[11]*(fbc[5]+1),-x[10]*(fbc[5]+1),-x[12]*(fbc[5]+1),-x[13]*(fbc[5]+1),
              x[14]*(fbc[5]+1),x[15]*(fbc[5]+1),-x[16]*fbc[5],-x[17]*fbc[5],x[18]*fbc[5],x[19]*fbc[5],x[21]*fbc[5],-x[20]*fbc[5],-x[23]*fbc[5],x[22]*fbc[5],
              -fbc[6]*(x[25]-x[24]),fbc[6]*(x[24]+x[25]),-fbc[6]*(x[26]-x[27]),-fbc[6]*(x[26]+x[27]),-fbc[6]*(x[29]+x[28]),-fbc[6]*(x[29]-x[28]),
              fbc[6]*(x[31]+x[30]),-fbc[6]*(x[30]-x[31]),fbc[0]*(x[33]+x[32]),-fbc[0]*(x[32]-x[33]),-fbc[0]*(x[35]+x[34]),-fbc[0]*(x[35]-x[34]),
              -fbc[0]*(x[37]-x[36]),fbc[0]*(x[36]+x[37]),-fbc[0]*(x[38]-x[39]),-fbc[0]*(x[38]+x[39]),-fbc[7]*(x[40]-x[41]),-fbc[7]*(x[40]+x[41]),
              -fbc[7]*(x[43]-x[42]),fbc[7]*(x[42]+x[43]),fbc[7]*(x[45]+x[44]),-fbc[7]*(x[44]-x[45]),-fbc[7]*(x[46]+x[47]),-fbc[7]*(x[47]-x[46])] 

def frob4Fp48(x,fbc):
        return [x[0],x[1],x[2],x[3],-x[4],-x[5],-x[6],-x[7],-x[8]*fbc[5],-x[9]*fbc[5],-x[10]*fbc[5], -x[11]*fbc[5],x[12]*fbc[5],x[13]*fbc[5],x[14]*fbc[5],x[15]*fbc[5],
              -x[16]*(fbc[5]+1), -x[17]*(fbc[5]+1),-x[18]*(fbc[5]+1),-x[19]*(fbc[5]+1),x[20]*(fbc[5]+1),x[21]*(fbc[5]+1),x[22]*(fbc[5]+1),x[23]*(fbc[5]+1)]+\
              [-x[25]*(1+fbc[5]),x[24]*(1+fbc[5]),-x[27]*(1+fbc[5]),x[26]*(1+fbc[5]),x[29]*(1+fbc[5]),-x[28]*(1+fbc[5]),x[31]*(1+fbc[5]),\
              -x[30]*(1+fbc[5]),-x[33],x[32],-x[35],x[34],x[37],-x[36],x[39],-x[38],x[41]*fbc[5],-x[40]*fbc[5], x[43]*fbc[5],-x[42]*fbc[5],-x[45]*fbc[5],\
              x[44]*fbc[5],-x[47]*fbc[5],x[46]*fbc[5]] 

def frob8Fp48(x,fbc):
        return [x[0],x[1],x[2],x[3],x[4] ,x[5],x[6],x[7],-x[8]*(fbc[5]+1),-x[9]*(fbc[5]+1),-x[10]*(fbc[5]+1),-x[11]*(fbc[5]+1),-x[12]*(fbc[5]+1),-x[13]*(fbc[5]+1),\
                -x[14]*(fbc[5]+1),-x[15]*(fbc[5]+1),x[16]*fbc[5],x[17]*fbc[5],x[18]*fbc[5],x[19]*fbc[5],x[20]*fbc[5],x[21]*fbc[5],x[22]*fbc[5],x[23]*fbc[5]]\
                +[-x[24]*fbc[5],-x[25]*fbc[5],-x[26]*fbc[5],-x[27]*fbc[5],-x[28]*fbc[5],-x[29]*fbc[5], -x[30]*fbc[5],-x[31]*fbc[5],-x[32],-x[33],-x[34],-x[35],\
                -x[36],-x[37],-x[38],-x[39],x[40]*(fbc[5]+1),x[41]*(fbc[5]+1),x[42]*(fbc[5]+1),x[43]*(fbc[5]+1),x[44]*(fbc[5]+1),x[45]*(fbc[5]+1),x[46]*(fbc[5]+1)\
                  ,x[47]*(fbc[5]+1)]  
